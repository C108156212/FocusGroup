{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pcstin\\\\Documents\\\\GitHub\\\\react-project-g9kei\\\\src\\\\examples\\\\Navbars\\\\DashboardNavbar\\\\index.js\",\n    _s = $RefreshSig$();\n\n/**\n=========================================================\n* Material Dashboard 2 React - v2.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\nimport { useState, useEffect } from \"react\"; // react-router components\n\nimport { useLocation } from \"react-router-dom\"; // prop-types is a library for typechecking of props.\n\nimport PropTypes from \"prop-types\"; // @material-ui core components\n\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\"; // Material Dashboard 2 React components\n\nimport MDBox from \"components/MDBox\";\nimport MDInput from \"components/MDInput\"; // Material Dashboard 2 React example components\n\nimport Breadcrumbs from \"examples/Breadcrumbs\"; // Custom styles for DashboardNavbar\n\nimport { navbar, navbarContainer, navbarRow } from \"examples/Navbars/DashboardNavbar/styles\"; // Material Dashboard 2 React context\n\nimport { useMaterialUIController, setTransparentNavbar } from \"context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DashboardNavbar(_ref) {\n  _s();\n\n  let {\n    absolute,\n    light,\n    isMini\n  } = _ref;\n  const [navbarType, setNavbarType] = useState();\n  const [controller, dispatch] = useMaterialUIController();\n  const route = useLocation().pathname.split(\"/\").slice(1);\n  useEffect(() => {\n    // Setting the navbar type\n    if (fixedNavbar) {\n      setNavbarType(\"sticky\");\n    } else {\n      setNavbarType(\"static\");\n    } // A function that sets the transparent state of the navbar.\n\n\n    function handleTransparentNavbar() {\n      setTransparentNavbar(dispatch, fixedNavbar && window.scrollY === 0 || !fixedNavbar);\n    }\n    /** \n     The event listener that's calling the handleTransparentNavbar function when \n     scrolling the window.\n    */\n\n\n    window.addEventListener(\"scroll\", handleTransparentNavbar); // Call the handleTransparentNavbar function to set the state with the initial value.\n\n    handleTransparentNavbar(); // Remove event listener on cleanup\n\n    return () => window.removeEventListener(\"scroll\", handleTransparentNavbar);\n  }, [dispatch, fixedNavbar]);\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: absolute ? \"absolute\" : navbarType,\n    color: \"inherit\",\n    sx: theme => navbar(theme, {\n      transparentNavbar,\n      absolute,\n      light,\n      darkMode\n    }),\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      sx: theme => navbarContainer(theme),\n      children: [/*#__PURE__*/_jsxDEV(MDBox, {\n        color: \"inherit\",\n        mb: {\n          xs: 1,\n          md: 0\n        },\n        sx: theme => navbarRow(theme, {\n          isMini\n        }),\n        children: /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n          icon: \"home\",\n          title: route[route.length - 1],\n          route: route,\n          light: light\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), isMini ? null : /*#__PURE__*/_jsxDEV(MDBox, {\n        sx: theme => navbarRow(theme, {\n          isMini\n        }),\n        children: /*#__PURE__*/_jsxDEV(MDBox, {\n          pr: 1,\n          children: /*#__PURE__*/_jsxDEV(MDInput, {\n            label: \"\\u8F38\\u5165\\u95DC\\u9375\\u5B57\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n} // Setting default values for the props of DashboardNavbar\n\n\n_s(DashboardNavbar, \"U599TecuJW5f4JinTnX6++ylH/A=\", false, function () {\n  return [useMaterialUIController, useLocation];\n});\n\n_c = DashboardNavbar;\nDashboardNavbar.defaultProps = {\n  absolute: false,\n  light: false,\n  isMini: false\n}; // Typechecking props for the DashboardNavbar\n\nDashboardNavbar.propTypes = {\n  absolute: PropTypes.bool,\n  light: PropTypes.bool,\n  isMini: PropTypes.bool\n};\nexport default DashboardNavbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardNavbar\");","map":{"version":3,"names":["useState","useEffect","useLocation","PropTypes","AppBar","Toolbar","MDBox","MDInput","Breadcrumbs","navbar","navbarContainer","navbarRow","useMaterialUIController","setTransparentNavbar","DashboardNavbar","absolute","light","isMini","navbarType","setNavbarType","controller","dispatch","route","pathname","split","slice","fixedNavbar","handleTransparentNavbar","window","scrollY","addEventListener","removeEventListener","theme","transparentNavbar","darkMode","xs","md","length","defaultProps","propTypes","bool"],"sources":["C:/Users/Pcstin/Documents/GitHub/react-project-g9kei/src/examples/Navbars/DashboardNavbar/index.js"],"sourcesContent":["/**\n=========================================================\n* Material Dashboard 2 React - v2.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useState, useEffect } from \"react\";\n\n// react-router components\nimport { useLocation } from \"react-router-dom\";\n\n// prop-types is a library for typechecking of props.\nimport PropTypes from \"prop-types\";\n\n// @material-ui core components\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDInput from \"components/MDInput\";\n\n// Material Dashboard 2 React example components\nimport Breadcrumbs from \"examples/Breadcrumbs\";\n\n// Custom styles for DashboardNavbar\nimport {\n  navbar,\n  navbarContainer,\n  navbarRow,\n} from \"examples/Navbars/DashboardNavbar/styles\";\n\n// Material Dashboard 2 React context\nimport {\n  useMaterialUIController,\n  setTransparentNavbar,\n} from \"context\";\n\nfunction DashboardNavbar({ absolute, light, isMini }) {\n  const [navbarType, setNavbarType] = useState();\n  const [controller, dispatch] = useMaterialUIController();\n  const route = useLocation().pathname.split(\"/\").slice(1);\n\n  useEffect(() => {\n    // Setting the navbar type\n    if (fixedNavbar) {\n      setNavbarType(\"sticky\");\n    } else {\n      setNavbarType(\"static\");\n    }\n\n    // A function that sets the transparent state of the navbar.\n    function handleTransparentNavbar() {\n      setTransparentNavbar(dispatch, (fixedNavbar && window.scrollY === 0) || !fixedNavbar);\n    }\n\n    /** \n     The event listener that's calling the handleTransparentNavbar function when \n     scrolling the window.\n    */\n    window.addEventListener(\"scroll\", handleTransparentNavbar);\n\n    // Call the handleTransparentNavbar function to set the state with the initial value.\n    handleTransparentNavbar();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"scroll\", handleTransparentNavbar);\n  }, [dispatch, fixedNavbar]);\n\n  return (\n    <AppBar\n      position={absolute ? \"absolute\" : navbarType}\n      color=\"inherit\"\n      sx={(theme) => navbar(theme, { transparentNavbar, absolute, light, darkMode })}\n    >\n      <Toolbar sx={(theme) => navbarContainer(theme)}>\n        <MDBox color=\"inherit\" mb={{ xs: 1, md: 0 }} sx={(theme) => navbarRow(theme, { isMini })}>\n          <Breadcrumbs icon=\"home\" title={route[route.length - 1]} route={route} light={light} />\n        </MDBox>\n        {isMini ? null : (\n          <MDBox sx={(theme) => navbarRow(theme, { isMini })}>\n            <MDBox pr={1}>\n              <MDInput label=\"輸入關鍵字\" />\n            </MDBox>\n          </MDBox>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n}\n\n// Setting default values for the props of DashboardNavbar\nDashboardNavbar.defaultProps = {\n  absolute: false,\n  light: false,\n  isMini: false,\n};\n\n// Typechecking props for the DashboardNavbar\nDashboardNavbar.propTypes = {\n  absolute: PropTypes.bool,\n  light: PropTypes.bool,\n  isMini: PropTypes.bool,\n};\n\nexport default DashboardNavbar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}